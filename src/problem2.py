'''
Each new term in the Fibonacci sequence
 is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values
do not exceed four million, find the sum of the even-valued terms.
'''


def find_sum():
    '''
    Every third number if even, there is no need to calculate rest of them
    a, b, a+b, a + 2b, 2a + 3b, 3a + 5b
    '''
    max_value = 4000000
    x = y = 1
    result = 0
    while(result < max_value):
        result += (x + y)
        x, y = x + 2 * y, 2 * x + 3 * y
    return result

print ("Sum is {}".format(find_sum()))

import timeit
t = timeit.Timer("find_sum()", "from __main__ import find_sum")
print ("Average running time: {} seconds".format(t.timeit(1000)))
